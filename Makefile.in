#############################################################################
# Don't touch these...
#############################################################################

this_makefile := ${lastword ${MAKEFILE_LIST}}
SHELL = @bash@ -o pipefail -o errexit -o nounset
.SECONDARY:

#############################################################################
# things to set / override
#############################################################################

#HELP:Build for @PACKAGE_NAME@ (@PACKAGE_TARNAME@)
#HELP:  Source dir = @srcdir@
#HELP:  Prefix/install dir = @prefix@

srcdir = @srcdir@
abs_srcdir = @abs_srcdir@
builddir = @builddir@
abs_builddir = @abs_builddir@
prefix = @prefix@
PACKAGE_TARNAME = @PACKAGE_TARNAME@

# PROGRAMS
# autoconf names
MKDIR_P = @MKDIR_P@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
SED = @SED@
# other names
find = @find@
git = git
zip = zip
stow = stow

config_files = @config_files@

src_files_default := ${shell ${find} ${srcdir}/src -type f ! -name '*~' ! -name '\#*\#' ! -name '\.\#*'}
src_files = ${src_files_default}
all_files = ${src_files:${srcdir}/src/%=${builddir}/build/%}
install_files = ${src_files:${srcdir}/src/%=${prefix}/%}

#############################################################################
#HELP:Default target is "all". Targets include:
.DEFAULT_GOAL = all

.PHONY: all #   Build everything
all: ${all_files}

.PHONY: install #   Install to $prefix (default "@prefix@")
install: ${install_files}

.PHONY: uninstall #   Remove installed files
uninstall:
	${RM} ${install_files}

.PHONY: clean #   Clean build products
clean:
	${RM} ${all_files}
	${RM} -r ${builddir}/build

.PHONY: distclean #   Clean all products
distclean: clean
	${RM} ${config_files} config.log config.status

#############################################################################
# all

${builddir}/build/%: ${srcdir}/src/%
	${MKDIR_P} ${dir $@}
	${INSTALL_DATA} -- $< $@

#############################################################################
# install

${prefix}/bin/%: ${builddir}/build/bin/%
	@ ${MKDIR_P} -- ${dir $@}
	${INSTALL_PROGRAM} -- $< $@

${prefix}/%: ${builddir}/build/%
	@ ${MKDIR_P} -- ${dir $@}
	${INSTALL_DATA} -- $< $@

#############################################################################
# zip

dist_name_default := ${PACKAGE_TARNAME}-${shell ${git} describe --always --tags}
dist_name = ${dist_name_default}

.PHONY: zip #   Create a zip archive
zip:
	${RM} -r ${builddir}/build/${dist_name}
	git submodule foreach 'PATH="${abs_builddir}/build/${dist_name}:$$PATH" ${MAKE} -C ${abs_srcdir} zip-package zip_package_path=$$PWD abs_builddir=${abs_builddir} dist_name=${dist_name}'
	PATH="${builddir}/build/${dist_name}:$$PATH" ${MAKE}
	PATH="${builddir}/build/${dist_name}:$$PATH" ${MAKE} install prefix=${builddir}/build/${dist_name}
	${RM} -f ${builddir}/build/${dist_name}.zip
	( cd ${builddir}/build && ${zip} -9 -r ${dist_name}.zip ${dist_name} )

.PHONY: zip-package
zip-package:
	cd ${zip_package_path} && ./configure --prefix=${abs_builddir}/build/${dist_name}
	${MAKE} -C ${zip_package_path}
	${MAKE} -C ${zip_package_path} install

#############################################################################
# stow

.PHONY: stow #   Install using GNU Stow (via default "@prefix@/stow/@PACKAGE_TARNAME@")
stow:
	${MAKE}
	${MAKE} install prefix=${prefix}/stow/${PACKAGE_TARNAME}
	${stow} -d ${prefix}/stow -t ${prefix} --stow --verbose --no-folding ${PACKAGE_TARNAME}

.PHONY: unstow #   Uninstall a GNU Stow installation
unstow:
	${stow} -d ${prefix}/stow -t ${prefix} --delete --verbose --no-folding ${PACKAGE_TARNAME}
	${MAKE} uninstall prefix=${prefix}/stow/${PACKAGE_TARNAME}
	${RM} -r ${prefix}/stow/${PACKAGE_TARNAME}

.PHONY: restow #   Unstow and then restow
restow: 
	${MAKE}
	${MAKE} install prefix=${prefix}/stow/${PACKAGE_TARNAME}
	${stow} -d ${prefix}/stow -t ${prefix} --restow --verbose --no-folding ${PACKAGE_TARNAME}

#############################################################################
# make help: this must be the last target

.PHONY: help #   Print this help
help:
	@ ${SED} -e '/^\.PHONY:/s/^\.PHONY: *\([^ #]*\) *\#\( *\)\([^ ].*\)/\2\1: \3/p;/^[^#]*#HELP:/s/[^#]*#HELP:\(.*\)/\1/p;d' ${this_makefile}

# don't put anything after this
